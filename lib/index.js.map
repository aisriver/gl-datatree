{"version":3,"sources":["index.js"],"names":["groundImg","require","GlDataTree","renderer","camera","scene","pointLight","ambLight","controls","treeGroup","selectedNode","dom","rayRaster","THREE","Raycaster","mouse","Vector2","mouseInfo","autoPlay","playInterval","autoRotate","treeData","treeTitle","listening","handleMousemove","e","x","y","width","height","correctX","clientX","correctY","clientY","animate","bind","setOption","dispose","props","shadow","WebGLRenderer","antialias","setSize","shadowMapEnabled","appendChild","domElement","setClearColor","PerspectiveCamera","position","set","lookAt","OrbitControls","target","Vector3","update","fog","Scene","background","Color","Fog","loader","TextureLoader","groundTexture","load","wrapS","wrapT","RepeatWrapping","repeat","anisotropy","groundMaterial","MeshLambertMaterial","map","mesh","Mesh","PlaneBufferGeometry","rotation","Math","PI","receiveShadow","add","PointLight","castShadow","near","far","mapSize","AmbientLight","object","currentMesh","domPosition","userData","type","document","body","style","cursor","transparent","opacity","color","onSelected","requestAnimationFrame","setFromCamera","intersects","intersectObjects","children","length","uuid","resetNodeStyle","showDetails","z","render","time","ids","raf","RAF","index","setInterval","preMesh","getObjectByName","obj","domInfo","title","data","JSON","stringify","group","loopDetail","box","Box3","setFromObject","max","isNaN","cleanMaterial","material","Object","keys","key","value","traverse","geometry","materials","Array","isArray","forEach","glDom","initRenderer","initCamera","initScene","initLight","clear","onmousemove","updateTooltip"],"mappings":"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","sourcesContent":["import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { getDomInfo } from './utils/dom';\nimport { updateTooltip, clearTooltip } from './utils/tooltip';\nimport { toWindowPosition } from './utils/position';\nimport RAF from './utils/RAF';\nimport createDataTree from './utils/datatree';\nconst groundImg = require('./assets/grasslight-small.jpg');\nclass GlDataTree {\n    constructor() {\n        this.renderer = null;\n        this.camera = null;\n        this.scene = null;\n        this.pointLight = null;\n        this.ambLight = null;\n        this.controls = null;\n        this.treeGroup = null;\n        this.selectedNode = null;\n        this.dom = null;\n        this.rayRaster = new THREE.Raycaster();\n        this.mouse = new THREE.Vector2();\n        this.mouseInfo = null;\n        // 是否开启自动播放\n        this.autoPlay = false;\n        // autoPlay interval\n        this.playInterval = 3000;\n        // 场景自动旋转\n        this.autoRotate = false;\n        this.treeData = [];\n        this.treeTitle = '';\n        this.listening = {};\n        /**\n         * 鼠标移动\n         */\n        this.handleMousemove = (e, dom) => {\n            this.mouseInfo = e;\n            const { x, y, width, height } = getDomInfo(dom);\n            // 标准设备横坐标\n            const correctX = ((e.clientX - x) / width) * 2 - 1;\n            // 标准设备纵坐标\n            const correctY = -((e.clientY - y) / height) * 2 + 1;\n            this.mouse.x = correctX;\n            this.mouse.y = correctY;\n        };\n        this.animate = this.animate.bind(this);\n        this.setOption = this.setOption.bind(this);\n        this.dispose = this.dispose.bind(this);\n    }\n    /**\n     * 初始化renderer\n     * @param props\n     */\n    initRenderer(props) {\n        const { shadow = true } = props || {};\n        if (this.dom) {\n            const { width, height } = getDomInfo(this.dom);\n            this.renderer = new THREE.WebGLRenderer({ antialias: true });\n            this.renderer.setSize(width, height);\n            this.renderer.shadowMapEnabled = shadow;\n            this.dom.appendChild(this.renderer.domElement);\n            this.renderer.setClearColor(0xffffff, 1.0);\n        }\n    }\n    /**\n     * 初始化camera\n     * @param param0\n     */\n    initCamera() {\n        if (this.dom && this.renderer) {\n            const { width, height } = getDomInfo(this.dom);\n            this.camera = new THREE.PerspectiveCamera(45, width / height, 1, 1000);\n            this.camera.position.set(0, 8, 60);\n            this.camera.lookAt(0, 0, 0);\n            // stats = new Stats();\n            // dom.appendChild(stats.dom);\n            this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n            this.controls.target = new THREE.Vector3(0, 0, 0);\n            this.controls.update();\n            this.dom.appendChild(this.renderer.domElement);\n        }\n    }\n    /**\n     *初始化scene\n     * @param props\n     */\n    initScene(props) {\n        const { fog = true } = props || {};\n        this.scene = new THREE.Scene();\n        this.scene.background = new THREE.Color(0xcce0ff);\n        if (fog) {\n            this.scene.fog = new THREE.Fog(0xcce0ff, 50, 500);\n        }\n        // ground\n        const loader = new THREE.TextureLoader();\n        const groundTexture = loader.load(groundImg);\n        groundTexture.wrapS = groundTexture.wrapT = THREE.RepeatWrapping;\n        groundTexture.repeat.set(25, 25);\n        groundTexture.anisotropy = 16;\n        const groundMaterial = new THREE.MeshLambertMaterial({ map: groundTexture });\n        const mesh = new THREE.Mesh(new THREE.PlaneBufferGeometry(1000, 1000), groundMaterial);\n        mesh.rotation.x = -Math.PI / 2;\n        mesh.receiveShadow = true;\n        this.scene.add(mesh);\n    }\n    /**\n     * 初始化灯光\n     */\n    initLight() {\n        if (this.scene) {\n            // 点光\n            this.pointLight = new THREE.PointLight(0xffffff, 1.0, 0);\n            this.pointLight.position.set(100, 100, 200);\n            this.pointLight.castShadow = true;\n            this.pointLight.shadow.camera.near = 8;\n            this.pointLight.shadow.camera.far = 1000;\n            this.pointLight.shadow.mapSize.width = 1024;\n            this.pointLight.shadow.mapSize.height = 1024;\n            // 环境光\n            this.ambLight = new THREE.AmbientLight(0x666666);\n            this.scene.add(this.ambLight);\n            this.scene.add(this.pointLight);\n        }\n    }\n    /**\n     * 重置选择对象的样式\n     */\n    resetNodeStyle() {\n        if (!this.selectedNode) {\n            return;\n        }\n        this.selectedNode.object['material']['opacity'] = 1;\n        this.selectedNode.object['material']['color'].set(0xffffff);\n    }\n    /**\n     * 详情展示\n     * @param currentMesh\n     * @param domPosition\n     */\n    showDetails(currentMesh, domPosition) {\n        if (currentMesh) {\n            const { userData } = currentMesh;\n            if (!userData.type) {\n                return;\n            }\n            document.body.style.cursor = 'pointer';\n            currentMesh['material'].transparent = true;\n            currentMesh['material'].opacity = 0.6;\n            currentMesh['material'].color.set(0xff0000);\n            const { onSelected } = this.listening;\n            if (onSelected) {\n                onSelected(userData, domPosition);\n            }\n        }\n    }\n    /**\n     * 动画\n     */\n    animate() {\n        requestAnimationFrame(this.animate);\n        if (this.controls) {\n            this.controls.update();\n        }\n        if (this.camera) {\n            //射线射出\n            this.rayRaster.setFromCamera(this.mouse, this.camera);\n            //射线上的物体\n            if (this.treeGroup) {\n                const intersects = this.rayRaster.intersectObjects(this.treeGroup.children);\n                if (intersects.length > 0 && this.mouseInfo) {\n                    if (this.selectedNode && this.selectedNode.object.uuid !== intersects[0].object.uuid) {\n                        this.resetNodeStyle();\n                    }\n                    this.selectedNode = intersects[0];\n                    this.showDetails(this.selectedNode.object, { x: this.mouseInfo.clientX, y: this.mouseInfo.clientY });\n                }\n                else {\n                    document.body.style.cursor = 'auto';\n                    if (!this.autoPlay) {\n                        clearTooltip();\n                    }\n                    this.resetNodeStyle();\n                }\n            }\n        }\n        if (this.renderer && this.pointLight && this.camera && this.scene) {\n            // 根据相机位置调整光源\n            this.pointLight.position.set(this.camera.position.x * 2 + 50, this.camera.position.y * 2, this.camera.position.z * 2);\n            this.renderer.render(this.scene, this.camera);\n        }\n        // stats.update();\n    }\n    /**\n     * 自动播放详情\n     */\n    loopDetail(time = this.playInterval) {\n        if (!this.treeGroup ||\n            !this.treeGroup.userData ||\n            !this.treeGroup.userData.ids ||\n            !this.scene ||\n            !this.camera ||\n            !this.dom) {\n            return;\n        }\n        const scene = this.scene;\n        const camera = this.camera;\n        const dom = this.dom;\n        const ids = this.treeGroup.userData.ids || [];\n        const length = ids.length;\n        const raf = new RAF();\n        if (length > 0) {\n            let index = -1;\n            raf.setInterval(() => {\n                // 先重置\n                if (index !== -1) {\n                    const preMesh = scene.getObjectByName(ids[index]);\n                    if (preMesh) {\n                        preMesh['material'].opacity = 1;\n                        preMesh['material']['color'].set(0xffffff);\n                    }\n                }\n                if (index < length - 1) {\n                    index++;\n                }\n                else {\n                    index = 0;\n                }\n                const currentMesh = scene.getObjectByName(ids[index]);\n                if (currentMesh && currentMesh.userData) {\n                    const { userData } = currentMesh;\n                    const domPosition = toWindowPosition({\n                        obj: currentMesh,\n                        camera,\n                        domInfo: getDomInfo(dom),\n                    });\n                    if (userData.type) {\n                        this.showDetails(currentMesh, { ...domPosition, x: domPosition.x + 100 });\n                    }\n                }\n            }, time);\n        }\n    }\n    /**\n     * 设置数据配置\n     */\n    setOption(props) {\n        if (!this.controls || !this.camera || !this.scene) {\n            return;\n        }\n        const camera = this.camera;\n        const scene = this.scene;\n        const { title, data } = props;\n        this.listening = props.listening || {};\n        this.autoPlay = props.autoPlay || this.autoPlay;\n        this.playInterval = props.playInterval || this.playInterval;\n        this.autoRotate = props.autoRotate || this.autoRotate;\n        this.controls.autoRotate = this.autoRotate;\n        if (JSON.stringify(data) !== JSON.stringify(this.treeData) || title !== this.treeTitle) {\n            this.treeData = [...data];\n            this.treeTitle = title;\n            createDataTree({ position: { x: 0, y: 1, z: 0 }, data, title }, group => {\n                scene.add(group);\n                this.treeGroup = group;\n                if (this.autoPlay) {\n                    this.loopDetail(this.playInterval);\n                }\n                const box = new THREE.Box3().setFromObject(group);\n                const { max } = box;\n                if (!isNaN(max.z) && !isNaN(max.y) && !isNaN(max.x)) {\n                    // 相机位置自适应\n                    camera.position.z += max.z;\n                    camera.position.y = max.y + 4;\n                }\n            });\n        }\n    }\n    /**\n     * dispose\n     */\n    dispose() {\n        if (!this.renderer || !this.scene) {\n            return;\n        }\n        this.renderer.dispose();\n        // dispose material\n        const cleanMaterial = (material) => {\n            material.dispose();\n            // dispose textures\n            for (const key of Object.keys(material)) {\n                const value = material[key];\n                if (value && typeof value === 'object' && 'minFilter' in value) {\n                    value.dispose();\n                }\n            }\n        };\n        this.scene.traverse(object => {\n            if (!(object instanceof THREE.Mesh)) {\n                return;\n            }\n            object.geometry.dispose();\n            const materials = object.material;\n            if (!Array.isArray(materials)) {\n                cleanMaterial(materials);\n            }\n            else {\n                // an array of materials\n                materials.forEach(material => cleanMaterial(material));\n            }\n        });\n    }\n    /**\n     * 初始化\n     */\n    init(glDom) {\n        this.dom = glDom;\n        this.initRenderer();\n        this.initCamera();\n        this.initScene();\n        this.initLight();\n        if (this.renderer && this.scene && this.camera) {\n            this.renderer.clear();\n            this.renderer.render(this.scene, this.camera);\n            this.animate();\n            // 绑定事件监听\n            this.dom.onmousemove = (e) => this.handleMousemove(e, glDom);\n        }\n        return {\n            setOption: this.setOption,\n            updateTooltip,\n            dispose: this.dispose,\n        };\n    }\n}\nexport default GlDataTree;\n"],"file":"index.js"}